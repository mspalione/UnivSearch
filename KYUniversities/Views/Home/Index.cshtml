@using KYUniversities.Models;
@model KYUniversities.Models.FormModel

@{
    ViewBag.Title = "Index";
}
<html>
<head>
    <title>
        KY Universities
    </title>
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Css/BootstrapTableCss.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Cinzel" rel="stylesheet">
</head>

<body style='background: powderblue'>
    <div class="jumbotron" style="background-image: url('../Content/bldg.png'); background-repeat: no-repeat; background-attachment: fixed; background-position: center;">
        <h1 class="ky text-center display-2">
            Kentucky Universities
        </h1>
        <img src="~/Content/kyHome.png" alt="Outline of Kentucky State Map with the word home." class="kyHome" style="opacity: 0.5">
    </div>
    <hr />

    @* Search bar *@
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search...">
    
    @*<div class="form">*@
        @* Add a school form *@
        <h3>Did we miss a school? Add it here!</h3>

        @using (Html.BeginForm("Index", "Home", FormMethod.Post))
        {
            <p>
                Institution Name:
                @Html.TextBoxFor(m => m.Institution)
            </p>
            <p>
                Head of Institution Name:
                @Html.TextBoxFor(m => m.Headname)
            </p>
            <p>
                Head of Institution Title:
                @Html.TextBoxFor(m => m.Headtitle)
            </p>
            <p>
                Institution State:
                @Html.DropDownList("myTextBox", new SelectList(new string[] { "KY" }))
            </p>
            <p>
                Institution Phone Number:
                @Html.TextBoxFor(m => m.Phone)
            </p>
            <p>
                Institution Website:
                @Html.TextBoxFor(m => m.Website)
            </p>
            <input id="Submit" type="submit" value="Submit" />
        }
    @*</div>*@

    <div id="myTable" class="container" style="padding-top: 2em;">
        <div class="row">
            <div id="no-more-tables">
                <table class="col-md-12 table-bordered table-striped table-condensed cf">
                    <thead class="cf">
                        <tr>
                            <th>
                                Institution Name
                            </th>
                            <th>
                                Head of Institution Name
                            </th>
                            <th>
                                Head of Institution Title
                            </th>
                            <th>
                                Institution Phone Number
                            </th>
                            <th>
                                Institution Website
                            </th>
                        </tr>
                    </thead>
                    <tbody id="tData">
                        @* Get data from csv file *@
                        @{
                            List<University> listUniv = (List<University>)ViewData["universities"];
                            foreach (var univ in listUniv)
                            {
                                <tr>
                                    <td>@univ.InstName</td>
                                    <td>@univ.ChfName</td>
                                    <td>@univ.ChfTitle</td>
                                    <td>@univ.PhNum</td>
                                    <td>@univ.WebAdd</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="gif">
        <iframe src="https://giphy.com/embed/QMA7KlOfLC5RS" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
    </div>
</body>
</html>

<script type="text/javascript">

    // Reorder Table
    window.onload = function () {
        const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;

        const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
            v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
        )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

        document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
            const table = th.closest('table');
            const tbody = table.querySelector('tbody');
            Array.from(tbody.querySelectorAll('tr'))
                .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                .forEach(tr => tbody.appendChild(tr));
        })));
    }

    function myFunction() {
        // Declare variables
        var input, filter, table, tr, i, j, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.querySelectorAll("tbody tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            var td = tr[i].getElementsByTagName("td");
            var found = false;
            for (j = 0; j < td.length && !found; j++) {
                if (td[j].textContent.toUpperCase().indexOf(filter) > -1) {
                    found = true;
                    break;
                }
            }
            tr[i].style.display = found ? "" : "none";
        }
    }
</script>
